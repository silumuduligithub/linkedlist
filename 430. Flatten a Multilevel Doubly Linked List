
class Solution {
    public Node flatten(Node head) {
        Stack<Node> st = new Stack<>();
        Node cur = head;
        Node tail = head;
        while(cur != null){
            if(cur.child != null){
                if(cur.next != null){
                    st.push(cur.next);
                    cur.next.prev = null;
                }
                cur.next = cur.child;
                cur.child.prev = cur;
                cur.child = null;
            }
            tail = cur;
            cur = cur.next;
        }
        while(st.size() > 0){
            cur = st.pop();
            tail.next = cur;
            cur.prev = tail;
            while(cur != null){
                tail = cur;
                cur = cur.next;
            }
        }
        return head;
    }
}
